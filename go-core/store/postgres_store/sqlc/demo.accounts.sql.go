// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: demo.accounts.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAccountByAccountNumber = `-- name: GetAccountByAccountNumber :one
SELECT
    a.account_id,
    a.account_number,
    a.customer_id,
    a.account_type,
    a.account_status,
    a.balance,
    a.currency,
    a.opened_date,
    a.closed_date,
    a.created_at,
    a.updated_at,
    c.customer_number,
    c.full_name,
    c.id_number,
    c.phone_number,
    c.email,
    c.address,
    c.date_of_birth
FROM demo.accounts a
INNER JOIN demo.customers c ON a.customer_id = c.customer_id
WHERE a.account_number = $1
`

type GetAccountByAccountNumberRow struct {
	AccountID      int64            `json:"account_id"`
	AccountNumber  string           `json:"account_number"`
	CustomerID     int64            `json:"customer_id"`
	AccountType    string           `json:"account_type"`
	AccountStatus  string           `json:"account_status"`
	Balance        pgtype.Numeric   `json:"balance"`
	Currency       string           `json:"currency"`
	OpenedDate     pgtype.Date      `json:"opened_date"`
	ClosedDate     pgtype.Date      `json:"closed_date"`
	CreatedAt      pgtype.Timestamp `json:"created_at"`
	UpdatedAt      pgtype.Timestamp `json:"updated_at"`
	CustomerNumber string           `json:"customer_number"`
	FullName       string           `json:"full_name"`
	IDNumber       string           `json:"id_number"`
	PhoneNumber    pgtype.Text      `json:"phone_number"`
	Email          pgtype.Text      `json:"email"`
	Address        pgtype.Text      `json:"address"`
	DateOfBirth    pgtype.Date      `json:"date_of_birth"`
}

func (q *Queries) GetAccountByAccountNumber(ctx context.Context, accountNumber string) (GetAccountByAccountNumberRow, error) {
	row := q.db.QueryRow(ctx, getAccountByAccountNumber, accountNumber)
	var i GetAccountByAccountNumberRow
	err := row.Scan(
		&i.AccountID,
		&i.AccountNumber,
		&i.CustomerID,
		&i.AccountType,
		&i.AccountStatus,
		&i.Balance,
		&i.Currency,
		&i.OpenedDate,
		&i.ClosedDate,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.CustomerNumber,
		&i.FullName,
		&i.IDNumber,
		&i.PhoneNumber,
		&i.Email,
		&i.Address,
		&i.DateOfBirth,
	)
	return i, err
}
